@using Domain.Contracts
@using Domain.Models
@using System.Security.Claims
@using subforum
@inject ISubForumService _forumService;
@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorAppForum</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                Home <span class="oi oi-home nav-image" aria-hidden="true"></span>
            </NavLink>
        </div>
        @foreach (var item in _subForums)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="@(() => Navigation.NavigateTo("/subforum/"+item.Id, true))">
                    @item.Title <span class="oi oi-list-rich nav-image" aria-hidden="true"></span>
                </NavLink>
            </div>
        }
        <AuthorizeView Policy="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="AddSubForum">
                    Add sub-forum <span class="oi oi-plus nav-image" aria-hidden="true"></span>
                </NavLink>
            </div>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private User? _user;
    //User object
    private string? roleTest;
    private ICollection<SubForum>? _subForums;

    protected override async Task OnInitializedAsync()
    {
        _subForums = await _forumService.GetSubForumAsync();
    }

}