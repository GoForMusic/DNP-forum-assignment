@page "/AddSubForum"
@using Domain.Models
@using Domain.Contracts
@using System.Security.Claims

@inject ISubForumService _subForumService;
@inject IUserService _userService
@inject NavigationManager Navigation

@attribute [Authorize(Policy = "SubForumAdmin")]

<main class="login-form">
            <div class="container-fluid">
                <div class="row justify-content-center">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header">Add SubForum</div>
                            <div class="card-body">
                                <div class="form-group row">
                                        <label for="email_address" class="col-md-4 col-form-label text-md-right">Title</label>
                                        <div class="col-md-6">
                                            <input type="text" id="title" @bind="subForum.Title" class="form-control" name="title" required autofocus>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label for="password" class="col-md-4 col-form-label text-md-right">Description</label>
                                        <div class="col-md-6">
                                            <textarea id="summernote" rows="5" class="form-control" @bind="subForum.Description"></textarea>
                                        </div>
                                    </div>

                                    <div class="col-md-6 offset-md-4">
                                        <button class="btn btn-primary" @onclick="CreateSubForumAsync">
                                            Create
                                        </button>
                                    </div>
                                    <div class="col-md-6 offset-md-4">

                                        @if (!string.IsNullOrEmpty(errorLabel))
                                        {
                                            <span class="help-block" style="color: red">@errorLabel</span>
                                        }
                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string errorLabel=String.Empty;
    
    private SubForum? subForum = new SubForum();
    private User? _user;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;

            if (user.Identity.IsAuthenticated)
            {
    //get user clas base on the user identity
                _user = await _userService.GetUser(user.Identity.Name);
            }
        }
        catch (Exception e)
        {
            errorLabel = $"Error: {e.Message}";
        }

    }

    private async Task CreateSubForumAsync()
    {
        try
        {
            if (string.IsNullOrEmpty(subForum.Title) || string.IsNullOrEmpty(subForum.Description))
            {
                throw new Exception("All the fields are mandatory");
            }
            else
            {
                subForum.OwnedBy = _user;
                await _subForumService.AddSubForum(subForum);
                Navigation.NavigateTo("/subforum/"+subForum.Id,true);
            }
        }
        catch (Exception e)
        {
            errorLabel = $"Error: {e.Message}";
        }
    }
}